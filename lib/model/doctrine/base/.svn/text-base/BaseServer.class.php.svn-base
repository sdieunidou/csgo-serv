<?php

/**
 * BaseServer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $ip
 * @property integer $port
 * @property string $isp
 * @property string $country
 * @property string $map
 * @property string $hostname
 * @property integer $players
 * @property integer $maxplayer
 * @property boolean $is_online
 * @property boolean $password
 * @property boolean $is_banned
 * @property timestamp $last_online
 * @property integer $game_id
 * @property integer $user_id
 * @property string $slug
 * @property Game $Game
 * @property sfGuardUser $sfGuardUser
 * @property Doctrine_Collection $UserHasServer
 * @property Doctrine_Collection $ServerHistory
 * 
 * @method string              getIp()            Returns the current record's "ip" value
 * @method integer             getPort()          Returns the current record's "port" value
 * @method string              getIsp()           Returns the current record's "isp" value
 * @method string              getCountry()       Returns the current record's "country" value
 * @method string              getMap()           Returns the current record's "map" value
 * @method string              getHostname()      Returns the current record's "hostname" value
 * @method integer             getPlayers()       Returns the current record's "players" value
 * @method integer             getMaxplayer()     Returns the current record's "maxplayer" value
 * @method boolean             getIsOnline()      Returns the current record's "is_online" value
 * @method boolean             getPassword()      Returns the current record's "password" value
 * @method boolean             getIsBanned()      Returns the current record's "is_banned" value
 * @method timestamp           getLastOnline()    Returns the current record's "last_online" value
 * @method integer             getGameId()        Returns the current record's "game_id" value
 * @method integer             getUserId()        Returns the current record's "user_id" value
 * @method string              getSlug()          Returns the current record's "slug" value
 * @method Game                getGame()          Returns the current record's "Game" value
 * @method sfGuardUser         getSfGuardUser()   Returns the current record's "sfGuardUser" value
 * @method Doctrine_Collection getUserHasServer() Returns the current record's "UserHasServer" collection
 * @method Doctrine_Collection getServerHistory() Returns the current record's "ServerHistory" collection
 * @method Server              setIp()            Sets the current record's "ip" value
 * @method Server              setPort()          Sets the current record's "port" value
 * @method Server              setIsp()           Sets the current record's "isp" value
 * @method Server              setCountry()       Sets the current record's "country" value
 * @method Server              setMap()           Sets the current record's "map" value
 * @method Server              setHostname()      Sets the current record's "hostname" value
 * @method Server              setPlayers()       Sets the current record's "players" value
 * @method Server              setMaxplayer()     Sets the current record's "maxplayer" value
 * @method Server              setIsOnline()      Sets the current record's "is_online" value
 * @method Server              setPassword()      Sets the current record's "password" value
 * @method Server              setIsBanned()      Sets the current record's "is_banned" value
 * @method Server              setLastOnline()    Sets the current record's "last_online" value
 * @method Server              setGameId()        Sets the current record's "game_id" value
 * @method Server              setUserId()        Sets the current record's "user_id" value
 * @method Server              setSlug()          Sets the current record's "slug" value
 * @method Server              setGame()          Sets the current record's "Game" value
 * @method Server              setSfGuardUser()   Sets the current record's "sfGuardUser" value
 * @method Server              setUserHasServer() Sets the current record's "UserHasServer" collection
 * @method Server              setServerHistory() Sets the current record's "ServerHistory" collection
 * 
 * @package    jeuxsteam
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseServer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('steam_server');
        $this->hasColumn('ip', 'string', 15, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 15,
             ));
        $this->hasColumn('port', 'integer', 5, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 5,
             ));
        $this->hasColumn('isp', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('country', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('map', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('hostname', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('players', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('maxplayer', 'integer', 3, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 3,
             ));
        $this->hasColumn('is_online', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('password', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('is_banned', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('last_online', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('game_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('slug', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Game', array(
             'local' => 'game_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('UserHasServer', array(
             'local' => 'id',
             'foreign' => 'server_id'));

        $this->hasMany('ServerHistory', array(
             'local' => 'id',
             'foreign' => 'server_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}