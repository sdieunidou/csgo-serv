<?php

/**
 * BaseServerHasPlayer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $server_id
 * @property integer $player_id
 * @property Player $Player
 * @property Server $Server
 * 
 * @method integer         getServerId()  Returns the current record's "server_id" value
 * @method integer         getPlayerId()  Returns the current record's "player_id" value
 * @method Player          getPlayer()    Returns the current record's "Player" value
 * @method Server          getServer()    Returns the current record's "Server" value
 * @method ServerHasPlayer setServerId()  Sets the current record's "server_id" value
 * @method ServerHasPlayer setPlayerId()  Sets the current record's "player_id" value
 * @method ServerHasPlayer setPlayer()    Sets the current record's "Player" value
 * @method ServerHasPlayer setServer()    Sets the current record's "Server" value
 * 
 * @package    jeuxsteam
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseServerHasPlayer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('steam_server_has_player');
        $this->hasColumn('server_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('player_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Player', array(
             'local' => 'player_id',
             'foreign' => 'id'));

        $this->hasOne('Server', array(
             'local' => 'server_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}